stages:
  - build
  - deploy

variables:
  GIT_SUBMODULE_STRATEGY: recursive

.build-template:
  stage: build
  image: docker:latest
  script:
    - echo -n "${CI_REGISTRY_PASSWORD}" | docker login -u "${CI_REGISTRY_USER}" --password-stdin "${CI_REGISTRY}"
    #- docker build -f "$CI_PROJECT_DIR"/ci/Dockerfile --pull -t "${CI_REGISTRY_IMAGE}:${DOCKER_TAG}" .
    - docker build --pull --build-arg CLI_VERSION="$SOURCE_BRANCH" -f "$DOCKERFILE_PATH" -t "$IMAGE_NAME" .
    #- docker push "${CI_REGISTRY_IMAGE}:${DOCKER_TAG}"
    - docker tag "$IMAGE_NAME" "$DOCKER_REPO":latest
    - docker push "$DOCKER_REPO":latest

Build Testing Docker Image:
  extends: .build-template
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'
      when: manual
    - if: '$CI_COMMIT_BRANCH =~ /^feature/'
      when: manual
    - if: '$CI_COMMIT_BRANCH =~ /^hotfix/'
      when: manual
  variables:
    DOCKER_TAG: ${CI_COMMIT_REF_SLUG}

Build Staging Docker Image:
  extends: .build-template
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^release/'
      when: manual
    - if: '$CI_COMMIT_BRANCH =~ /^bugfix/'
      when: manual
  variables:
    DOCKER_TAG: ${CI_COMMIT_SHORT_SHA}

#Tag Production Image:
#  stage: build
#  image: docker:latest
#  variables:
#    GIT_STRATEGY: none
#  script:
#    - echo -n "${CI_REGISTRY_PASSWORD}" | docker login -u "${CI_REGISTRY_USER}" --password-stdin "${CI_REGISTRY}"
#    - docker pull "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}"
#    - docker tag "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}" "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}"
#    - docker tag "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}" "${CI_REGISTRY_IMAGE}":latest
#    - docker push "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}"
#    - docker push "${CI_REGISTRY_IMAGE}":latest
#  rules:
#    - if: '$CI_COMMIT_TAG'
#      when: manual


.deploybase:
  stage: deploy
  image:
    name: ${CI_REGISTRY}/didimo/rancher-extensions/cli:latest
    entrypoint: [""]
  dependencies: []
  script:
    - echo "running deploy base..."
#    - rancher --url https://rancher.didimo.co --access-key ${RANCHER_ACCESS_KEY}
#      --secret-key ${RANCHER_SECRET_KEY} up -d -p --force-upgrade
#      --confirm-upgrade -s api-v3 -f ci/docker-compose.yml

Deploy to Testing:
  extends: .deploybase
  variables:
    DOCKER_TAG: ${CI_COMMIT_REF_SLUG}
  environment:
    name: Testing
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'
      when: manual
    - if: '$CI_COMMIT_BRANCH =~ /^feature/'
      when: manual
    - if: '$CI_COMMIT_BRANCH =~ /^hotfix/'
      when: manual

Deploy to Staging:
  extends: .deploybase
  variables:
    DOCKER_TAG: ${CI_COMMIT_SHORT_SHA}
  environment:
    name: Staging
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^release/'
      when: manual
    - if: '$CI_COMMIT_BRANCH =~ /^bugfix/'
      when: manual

Deploy to Pre-Production:
  extends: .deploybase
  variables:
    DOCKER_TAG: ${CI_COMMIT_SHORT_SHA}
  environment:
    name: Pre-Production
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^release/'
      when: manual
    - if: '$CI_COMMIT_BRANCH =~ /^bugfix/'
      when: manual

Deploy to Production:
  extends: .deploybase
  variables:
    DOCKER_TAG: ${CI_COMMIT_TAG}
  environment:
    name: Production
  rules:
    - if: '$CI_COMMIT_TAG'
      when: manual
